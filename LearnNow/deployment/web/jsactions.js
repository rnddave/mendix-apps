define(["big.js"], (__WEBPACK_EXTERNAL_MODULE_big_js__) => { return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../../../../../../SHARED/GitHub/mendix-apps/LearnNow/javascriptsource/nanoflowcommons/actions/OpenMap.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../../../SHARED/GitHub/mendix-apps/LearnNow/javascriptsource/nanoflowcommons/actions/OpenMap.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenMap": () => (/* binding */ OpenMap)
/* harmony export */ });
/* harmony import */ var big_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! big.js */ "big.js");
/* harmony import */ var big_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(big_js__WEBPACK_IMPORTED_MODULE_0__);
// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.


// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * Opens a map application on your device or a web browser showing Google Maps.
 * @param {string} location - Can be either address, latitude/longitude (51.906, 4.488) or interest point.This field is required.
 * @returns {Promise.<boolean>}
 */
async function OpenMap(location) {
  // BEGIN USER CODE
  if (!location) {
    return Promise.reject(new Error("Input parameter 'Location' is required"));
  }
  location = encodeURIComponent(location);
  const iosUrl = `maps://maps.apple.com/?q=${location}`;
  const androidUrl = `geo:0,0?q=${location}`;
  const webUrl = `https://maps.google.com/maps?q=${location}`;
  // Native platform
  if (navigator && navigator.product === "ReactNative") {
    const Linking = (__webpack_require__(/*! react-native */ "?1252").Linking);
    const Platform = (__webpack_require__(/*! react-native */ "?1252").Platform);
    const url = Platform.select({
      ios: iosUrl,
      default: androidUrl
    });
    return Linking.canOpenURL(url).then(supported => {
      if (!supported) {
        return false;
      }
      return Linking.openURL(url).then(() => true);
    });
  }
  // Hybrid or mobile web platform
  if (window && window.navigator.userAgent) {
    // iOS platform
    if (/iPad|iPhone|iPod/i.test(window.navigator.userAgent)) {
      openUrl(iosUrl);
      return Promise.resolve(true);
    }
    // Android platform
    if (/android|sink/i.test(window.navigator.userAgent)) {
      openUrl(androidUrl);
      return Promise.resolve(true);
    }
  }
  // Desktop web or other platform
  if (window) {
    window.location.href = webUrl;
    return Promise.resolve(true);
  }
  return Promise.resolve(false);
  function openUrl(url) {
    // Hybrid platform
    if (window && window.cordova) {
      window.open(url, "_system");
    }
    // Mobile web platform
    if (window) {
      window.location.href = url;
    }
  }
  // END USER CODE
}

/***/ }),

/***/ "../../../../../../SHARED/GitHub/mendix-apps/LearnNow/javascriptsource/nanoflowcommons/actions/Share.js":
/*!**************************************************************************************************************!*\
  !*** ../../../../../../SHARED/GitHub/mendix-apps/LearnNow/javascriptsource/nanoflowcommons/actions/Share.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Share": () => (/* binding */ Share)
/* harmony export */ });
/* harmony import */ var big_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! big.js */ "big.js");
/* harmony import */ var big_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(big_js__WEBPACK_IMPORTED_MODULE_0__);
// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.


// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * Action to invoke the native sharing mechanism of the device.
 * @param {string} url - The url to share.
 * @param {string} text - The text to share.
 * @param {string} title - An optional title for the message or url to share. Only some share targets use this value.
 * @returns {Promise.<boolean>}
 */
async function Share(url, text, title) {
  // BEGIN USER CODE
  if (!text && !url) {
    return Promise.reject(new Error("It is required to provide at least one of input parameters 'Text' and 'Url'"));
  }
  // Native platform
  // Documentation https://facebook.github.io/react-native/docs/share
  if (navigator && navigator.product === "ReactNative") {
    const RNShare = (__webpack_require__(/*! react-native */ "?1252").Share);
    const content = url && text ? {
      message: text + "\n" + url,
      title
    } : url ? {
      url,
      title
    } : {
      message: text,
      title
    };
    return RNShare.share(content).then(result => {
      if (result.action === RNShare.dismissedAction) {
        return false;
      }
      return true;
    });
  }
  // Web platform
  // Documentation https://developer.mozilla.org/en-US/docs/Web/API/Navigator/share
  if (navigator && navigator.share) {
    return navigator.share({
      url,
      text,
      title
    }).then(() => true);
  }
  // Hybrid platform
  // Documentation https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin
  if (window && window.plugins && window.plugins.socialsharing) {
    return new Promise((resolve, reject) => {
      window.plugins.socialsharing.shareWithOptions({
        message: text,
        subject: title,
        url
      }, result => resolve(result.completed), errorMessage => reject(new Error(errorMessage)));
    });
  }
  if (document && document.location && document.location.protocol === "http:") {
    return Promise.reject(new Error("This action requires a secure https: connection"));
  }
  return Promise.reject(new Error("This action is not supported by this browser"));
  // END USER CODE
}

/***/ }),

/***/ "big.js":
/*!*************************!*\
  !*** external "big.js" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_big_js__;

/***/ }),

/***/ "?1252":
/*!*************************************!*\
  !*** react-native (ignored module) ***!
  \*************************************/
/***/ (() => {

/* empty */

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!****************************************************************************************!*\
  !*** ../../../../../../SHARED/GitHub/mendix-apps/LearnNow/deployment/tmp/jsactions.js ***!
  \****************************************************************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NanoflowCommons$OpenMap": () => (/* binding */ NanoflowCommons$OpenMap),
/* harmony export */   "NanoflowCommons$Share": () => (/* binding */ NanoflowCommons$Share)
/* harmony export */ });
const NanoflowCommons$Share = async () => (await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../../../../../SHARED/GitHub/mendix-apps/LearnNow/javascriptsource/nanoflowcommons/actions/Share */ "../../../../../../SHARED/GitHub/mendix-apps/LearnNow/javascriptsource/nanoflowcommons/actions/Share.js"))).Share;
const NanoflowCommons$OpenMap = async () => (await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../../../../../SHARED/GitHub/mendix-apps/LearnNow/javascriptsource/nanoflowcommons/actions/OpenMap */ "../../../../../../SHARED/GitHub/mendix-apps/LearnNow/javascriptsource/nanoflowcommons/actions/OpenMap.js"))).OpenMap;
})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,